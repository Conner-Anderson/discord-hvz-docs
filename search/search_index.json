{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Documentation for Discord-HVZ \u00b6 Discord-HVZ is a run-it-yourself Discord bot that helps run Humans vs. Zombies games. This documentation contains everything you need to manage an HVZ game with the help of Discord . For information about HvZ: humansvszombies.org Summary \u00b6 This bot was developed to run HvZ games at LeTourneau University in Texas, but is now published for use anywhere. A version of it has been used each semester at LeTourneau since Fall 2019. It is a simple and streamlined system designed to leverage the easy-to-use features of Discord which already manages accounts, permissions, and messaging. It was developed in response to the popular service HvZ SOURCE going offline. Features \u00b6 Registers players for the game through a questionnaire Accepts tag reports from players by validating tags, changing player factions, and announcing the tag to all players Displays the zombie tag geneology and other statistics Displays player and tag information in a live Google Sheet for easy administration Fully supports both desktop and mobile users Includes many commands for managing the game Includes configuration options and customizable questionnaires Works on existing Discord servers without disrupting non-players Works on Windows, Linux, and Mac, though the docs are written for Windows Written in Python, potentially aiding personalization Prerequisites \u00b6 Mild tech-saviness. You must have dabbled in coding at some point, are not afraid of a command-prompt, and are willing to read a few StackOverflow pages if things don't go quite right. A Discord account that owns the server you want to run the bot on. You could also just get the owner to do a few setup steps for you. A Google account to access the Google Sheet and the Sheets API. A computer that can run the bot for the entire game. For example, you may leave your desktop on, borrow someone's old laptop, or use a Raspberry Pi in the closet. This documentation is written for a Windows PC, but with a little translation, should work fine for Linux or Mac. This software is for HvZ admin teams willing to do a bit of legwork to set it up, giving you an HvZ system entirely under your control. Get Started \u00b6 Setup Running the Game Development \u00b6 Hey! I'm Conner, and I wrote this bot. I did it to support the game I love at my alma-mater and also to learn how to write better software. If people actually use this to run HvZ games, I'll keep adding features and fixing bugs! I also offer support for anyone at conneranderson.dev@gmail.com For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#documentation-for-discord-hvz","text":"Discord-HVZ is a run-it-yourself Discord bot that helps run Humans vs. Zombies games. This documentation contains everything you need to manage an HVZ game with the help of Discord . For information about HvZ: humansvszombies.org","title":"Documentation for Discord-HVZ"},{"location":"#summary","text":"This bot was developed to run HvZ games at LeTourneau University in Texas, but is now published for use anywhere. A version of it has been used each semester at LeTourneau since Fall 2019. It is a simple and streamlined system designed to leverage the easy-to-use features of Discord which already manages accounts, permissions, and messaging. It was developed in response to the popular service HvZ SOURCE going offline.","title":"Summary"},{"location":"#features","text":"Registers players for the game through a questionnaire Accepts tag reports from players by validating tags, changing player factions, and announcing the tag to all players Displays the zombie tag geneology and other statistics Displays player and tag information in a live Google Sheet for easy administration Fully supports both desktop and mobile users Includes many commands for managing the game Includes configuration options and customizable questionnaires Works on existing Discord servers without disrupting non-players Works on Windows, Linux, and Mac, though the docs are written for Windows Written in Python, potentially aiding personalization","title":"Features"},{"location":"#prerequisites","text":"Mild tech-saviness. You must have dabbled in coding at some point, are not afraid of a command-prompt, and are willing to read a few StackOverflow pages if things don't go quite right. A Discord account that owns the server you want to run the bot on. You could also just get the owner to do a few setup steps for you. A Google account to access the Google Sheet and the Sheets API. A computer that can run the bot for the entire game. For example, you may leave your desktop on, borrow someone's old laptop, or use a Raspberry Pi in the closet. This documentation is written for a Windows PC, but with a little translation, should work fine for Linux or Mac. This software is for HvZ admin teams willing to do a bit of legwork to set it up, giving you an HvZ system entirely under your control.","title":"Prerequisites"},{"location":"#get-started","text":"Setup Running the Game","title":"Get Started"},{"location":"#development","text":"Hey! I'm Conner, and I wrote this bot. I did it to support the game I love at my alma-mater and also to learn how to write better software. If people actually use this to run HvZ games, I'll keep adding features and fixing bugs! I also offer support for anyone at conneranderson.dev@gmail.com For full documentation visit mkdocs.org .","title":"Development"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"commands/","text":"Commands \u00b6 Overview \u00b6 Discord's Slash Commands provide a robust way to control the bot. You can start composing a command by typing / in any channel the bot has access to, which will bring up a list of available commands. Finish typing what you want, or select the command in the list. Commands are grouped into categories such as member and tag to stay organized. For example, to list members, use the sub-command of member like this: /member list . Most commands have arguments to supply, which Discord will prompt you to do fill-in-the-blank style. If asked to supply a member, you can start typing their name to select from a list. Most arguments will tell you what kind of response they expect, and if they are optional. In this documentation, arguments for commands are annotated like this: <input> means the argument is required, and you supply the contents. [input] means the argument is optional, and you supply the contents. input means you need to type \"input\" exactly as shown. ... means there are some arguments not listed that you can infer logically. Standalone Commands \u00b6 code \u00b6 /code config \u00b6 /config <setting> [choice] Manipulates certain important configuration settings. Displays the current setting if no choice is given, and changes the setting if it is. Add settings here oz \u00b6 /oz <member> [setting] Reports whether or not a member is an OZ (original zombie), and changes their OZ status if setting is supplied. An OZ is defined as a player who is set as one in the database. This status has no bearing on the game, but is useful for tracking purposes. When an OZ is added with this command, they are given specific permission to access the zombie-chat and report-tags channels. This permission is invisible to other server members, and so can be kept secret. When an OZ is removed, these specific permissions are removed as well. You don't need OZs to run the game. Manually giving a player (even a human) access to the tag logging button is enough to get things started. See the silent-oz config option. post_button \u00b6 /post_button [text] [button_1] [button_2] ... [button_5] Sends a message in this channel that contains one or multiple buttons that will start one of the chatbots. It will also contain text if you choose. There is no limit to the number of the same button that can exist in a guild, and they can be deleted at any time. post_panel \u00b6 /post_panel shutdown \u00b6 /shutdown [force] Shuts down the bot, which must be restarted from the computer it is running on. If there are any chatbots running, they will be listed, and the bot will not shutdown. If force is supplied as true , the bot will shut down anyways, closing any chatbots. The members using those chatbots will be notified, and will need to start over. Member Commands \u00b6 member_list \u00b6 /member list Lists all members. Generally, looking at the Google Sheet is a better option. member_register \u00b6 /member register <member> Starts a registration chatbot with you on behalf of the selected member. You will answer all questions, but the member you selected will be actually registered. Helpful if the chatbot is acting up for someone, or they were accidentally deleted from the game. member_delete \u00b6 /member delete <member> Removes the selected member from the game. They remain on the server and in tag records, but are removed from as a member from the database and have their game roles revoked. Will probably mess up some game statistics... Bug Cannot currently delete members no longer on the server. member_edit \u00b6 /member edit <member> <attribute> <value> An advanced command to directly edit a member in the database. You should consult the Google Sheet before using this. attribute must exactly match the database column to change, as seen on the Google Sheet. value is the new value. The command does not check if this is a valid value! Warning This command does not yet support changing dates. It might work... but it might not. Use a database editor like DB Browser for SQLite to change dates until this feature is added.","title":"Commands"},{"location":"commands/#commands","text":"","title":"Commands"},{"location":"commands/#overview","text":"Discord's Slash Commands provide a robust way to control the bot. You can start composing a command by typing / in any channel the bot has access to, which will bring up a list of available commands. Finish typing what you want, or select the command in the list. Commands are grouped into categories such as member and tag to stay organized. For example, to list members, use the sub-command of member like this: /member list . Most commands have arguments to supply, which Discord will prompt you to do fill-in-the-blank style. If asked to supply a member, you can start typing their name to select from a list. Most arguments will tell you what kind of response they expect, and if they are optional. In this documentation, arguments for commands are annotated like this: <input> means the argument is required, and you supply the contents. [input] means the argument is optional, and you supply the contents. input means you need to type \"input\" exactly as shown. ... means there are some arguments not listed that you can infer logically.","title":"Overview"},{"location":"commands/#standalone-commands","text":"","title":"Standalone Commands"},{"location":"commands/#code","text":"/code","title":"code"},{"location":"commands/#config","text":"/config <setting> [choice] Manipulates certain important configuration settings. Displays the current setting if no choice is given, and changes the setting if it is. Add settings here","title":"config"},{"location":"commands/#oz","text":"/oz <member> [setting] Reports whether or not a member is an OZ (original zombie), and changes their OZ status if setting is supplied. An OZ is defined as a player who is set as one in the database. This status has no bearing on the game, but is useful for tracking purposes. When an OZ is added with this command, they are given specific permission to access the zombie-chat and report-tags channels. This permission is invisible to other server members, and so can be kept secret. When an OZ is removed, these specific permissions are removed as well. You don't need OZs to run the game. Manually giving a player (even a human) access to the tag logging button is enough to get things started. See the silent-oz config option.","title":"oz"},{"location":"commands/#post_button","text":"/post_button [text] [button_1] [button_2] ... [button_5] Sends a message in this channel that contains one or multiple buttons that will start one of the chatbots. It will also contain text if you choose. There is no limit to the number of the same button that can exist in a guild, and they can be deleted at any time.","title":"post_button"},{"location":"commands/#post_panel","text":"/post_panel","title":"post_panel"},{"location":"commands/#shutdown","text":"/shutdown [force] Shuts down the bot, which must be restarted from the computer it is running on. If there are any chatbots running, they will be listed, and the bot will not shutdown. If force is supplied as true , the bot will shut down anyways, closing any chatbots. The members using those chatbots will be notified, and will need to start over.","title":"shutdown"},{"location":"commands/#member-commands","text":"","title":"Member Commands"},{"location":"commands/#member_list","text":"/member list Lists all members. Generally, looking at the Google Sheet is a better option.","title":"member_list"},{"location":"commands/#member_register","text":"/member register <member> Starts a registration chatbot with you on behalf of the selected member. You will answer all questions, but the member you selected will be actually registered. Helpful if the chatbot is acting up for someone, or they were accidentally deleted from the game.","title":"member_register"},{"location":"commands/#member_delete","text":"/member delete <member> Removes the selected member from the game. They remain on the server and in tag records, but are removed from as a member from the database and have their game roles revoked. Will probably mess up some game statistics... Bug Cannot currently delete members no longer on the server.","title":"member_delete"},{"location":"commands/#member_edit","text":"/member edit <member> <attribute> <value> An advanced command to directly edit a member in the database. You should consult the Google Sheet before using this. attribute must exactly match the database column to change, as seen on the Google Sheet. value is the new value. The command does not check if this is a valid value! Warning This command does not yet support changing dates. It might work... but it might not. Use a database editor like DB Browser for SQLite to change dates until this feature is added.","title":"member_edit"},{"location":"config_options/","text":"Config Options \u00b6 silent_oz \u00b6 When true , the identity of an OZ is not included in tag announcements. This lets you keep who the OZs are a mystery until players see them in the real world. You will likely want to turn this False once the OZs are commonly known. channel_names \u00b6 These settings map specific channels the bot needs to the actual channel names on the guild. If these channels aren't specified, the bot will search for the channels that match the names below. The bot will fail to start if it doesn't find a channel. tag-announcements \u00b6 The channel where tags are announced. It is recommended that all players can view this, but only admins and the bot can post. report-tags \u00b6 A channel that the tag logging button is posted in. Only zombies should have permission to view this. The bot needs to know about this channel so it can secretly give the OZs access to it. zombie-chat \u00b6 A channel zombies can use to talk to each other in, which only they have access to. The bot needs to know about this channel so it can secretly give the OZs access to it. bot-output \u00b6 The channel the bot can use to output system messages to. Should only be visible to admins, and should be muted. role_names \u00b6 These settings map specific roles the bot needs to the actual role names on the guild. If these roles aren't specified, the bot will search for the roles that match the names below. The bot will fail to start if it doesn't find a role. zombie \u00b6 Tagged players will get this role and should have access to click the tag logging button. human \u00b6 Tagged players will lose this role and should not have access to click the tag logging button, except for secret OZs. player \u00b6 A role all registered players get. Good for separating game channels from other channels in the guild.","title":"Config Options"},{"location":"config_options/#config-options","text":"","title":"Config Options"},{"location":"config_options/#silent_oz","text":"When true , the identity of an OZ is not included in tag announcements. This lets you keep who the OZs are a mystery until players see them in the real world. You will likely want to turn this False once the OZs are commonly known.","title":"silent_oz"},{"location":"config_options/#channel_names","text":"These settings map specific channels the bot needs to the actual channel names on the guild. If these channels aren't specified, the bot will search for the channels that match the names below. The bot will fail to start if it doesn't find a channel.","title":"channel_names"},{"location":"config_options/#tag-announcements","text":"The channel where tags are announced. It is recommended that all players can view this, but only admins and the bot can post.","title":"tag-announcements"},{"location":"config_options/#report-tags","text":"A channel that the tag logging button is posted in. Only zombies should have permission to view this. The bot needs to know about this channel so it can secretly give the OZs access to it.","title":"report-tags"},{"location":"config_options/#zombie-chat","text":"A channel zombies can use to talk to each other in, which only they have access to. The bot needs to know about this channel so it can secretly give the OZs access to it.","title":"zombie-chat"},{"location":"config_options/#bot-output","text":"The channel the bot can use to output system messages to. Should only be visible to admins, and should be muted.","title":"bot-output"},{"location":"config_options/#role_names","text":"These settings map specific roles the bot needs to the actual role names on the guild. If these roles aren't specified, the bot will search for the roles that match the names below. The bot will fail to start if it doesn't find a role.","title":"role_names"},{"location":"config_options/#zombie","text":"Tagged players will get this role and should have access to click the tag logging button.","title":"zombie"},{"location":"config_options/#human","text":"Tagged players will lose this role and should not have access to click the tag logging button, except for secret OZs.","title":"human"},{"location":"config_options/#player","text":"A role all registered players get. Good for separating game channels from other channels in the guild.","title":"player"},{"location":"running_the_game/","text":"Usage \u00b6","title":"Running the Game"},{"location":"running_the_game/#usage","text":"","title":"Usage"},{"location":"setup/","text":"Setup \u00b6 Server Setup \u00b6 Channels \u00b6 Your Discord server must have the channels names section configured in config.yml to function. Please see Config Options: channel_names for information. You can change these channels later, but the bot must have permission to view and post in these channels. To play the game, server members need a way to click the registration button, and zombies need a way to click the tag logging button. Let's create those now. Go the channel you want the registration button in. It is recommended that this channel be one dedicated to information about the game. Send the command /post_button and selection \"registration\" as the button_1 option. If you're unfamiliar with Discord Slash Commands, look here: Info If you don't like where the registration button sits in the channel, you can always delete it and try again later. The buttons are quite forgiving. Do the same for the tag_logging button in the same channel you configured as the report-tags channel. You can get creative and post this button in other places too, but be warned: anyone who can click the button can try to log a tag, even humans. It is designed this way so you are responsible for setting up the server roles, permissions, and channels to keep humans and zombies where you want them. It is also recommended that you create a channel purely for sending the bot commands, and leave it muted. No need to clutter up other channels with that. Remember to give the bot access to it. Setup admin roles Roles \u00b6 Your Discord server must have the roles section configured as well. See Config Options: role_names for information. Ensure you have a role for each faction, and one for all players. The bot must have permission to manage these roles , meaning they have to be lower than it in the role hierarchy. Commands \u00b6 Discord lets you manage command permissions through Server Settings / Integrations / [Your Bot] . Here you can give permissions to certain users and roles to use categories of commands. By default, everyone can use everything. That's bad, so restrict most commands to only your admins. The /code command is designed to be used by players though.","title":"Setup"},{"location":"setup/#setup","text":"","title":"Setup"},{"location":"setup/#server-setup","text":"","title":"Server Setup"},{"location":"setup/#channels","text":"Your Discord server must have the channels names section configured in config.yml to function. Please see Config Options: channel_names for information. You can change these channels later, but the bot must have permission to view and post in these channels. To play the game, server members need a way to click the registration button, and zombies need a way to click the tag logging button. Let's create those now. Go the channel you want the registration button in. It is recommended that this channel be one dedicated to information about the game. Send the command /post_button and selection \"registration\" as the button_1 option. If you're unfamiliar with Discord Slash Commands, look here: Info If you don't like where the registration button sits in the channel, you can always delete it and try again later. The buttons are quite forgiving. Do the same for the tag_logging button in the same channel you configured as the report-tags channel. You can get creative and post this button in other places too, but be warned: anyone who can click the button can try to log a tag, even humans. It is designed this way so you are responsible for setting up the server roles, permissions, and channels to keep humans and zombies where you want them. It is also recommended that you create a channel purely for sending the bot commands, and leave it muted. No need to clutter up other channels with that. Remember to give the bot access to it. Setup admin roles","title":"Channels"},{"location":"setup/#roles","text":"Your Discord server must have the roles section configured as well. See Config Options: role_names for information. Ensure you have a role for each faction, and one for all players. The bot must have permission to manage these roles , meaning they have to be lower than it in the role hierarchy.","title":"Roles"},{"location":"setup/#commands","text":"Discord lets you manage command permissions through Server Settings / Integrations / [Your Bot] . Here you can give permissions to certain users and roles to use categories of commands. By default, everyone can use everything. That's bad, so restrict most commands to only your admins. The /code command is designed to be used by players though.","title":"Commands"}]}